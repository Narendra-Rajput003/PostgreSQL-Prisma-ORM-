// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String?
  email String @unique
  password String?
  post Post[]
  comment Comment[]
  create_at DateTime @default(now())

}

//@relation is a Prisma attribute used to define relationships between models.
//fields: [user_id] specifies the foreign key field in the Post model that holds the relation. In this case, user_id is the foreign key in the Post model.
//references: [id] specifies the primary key field in the User model that the foreign key refers to. Here, id is the primary key in the User model.
model Post{
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id],references: [id],onDelete: Cascade)
  comment Comment[]
  user_id Int
  title String
  description String
  comment_count Int @default(0)
  create_at DateTime @default(now())
}

// uuid for encrypt's id for security
model Comment{
  id String @id @default(uuid())
  post Post @relation(fields: [post_id],references: [id],onDelete: Cascade)
  post_id Int
  user User @relation(fields: [user_id],references: [id],onDelete: Cascade)
  user_id Int
  content String
  create_at DateTime @default(now())

}